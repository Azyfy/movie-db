{"version":3,"sources":["services/moviedb.ts","store/reducers/index.ts","components/Loader.tsx","components/Genres.tsx","components/FallBackPic.tsx","components/PictureBackdrop.tsx","components/Titles.tsx","components/NoMatch.tsx","components/Header.tsx","hooks/useTimedValue.tsx","components/Search.tsx","components/NavMenu.tsx","components/VideoFrame.tsx","components/Title.tsx","components/SingleTitle.tsx","components/Footer.tsx","components/Error.tsx","App.tsx","store/index.ts","index.tsx"],"names":["getTopRated","a","Promise","all","axios","get","process","moviesResponse","showsResponse","topMovies","data","results","splice","topShows","getGenres","movieGenresResult","showGenresResult","movieGenres","genres","showGenres","getTitle","id","type","titleResult","title","getSearchedTitle","searchTerm","searchResults","searchedTitles","initialState","handleError","message","initializeSearchResults","dispatch","dispatchError","errorMessage","reducer","state","action","topRated","clearResults","Loader","className","Genres","titleGenres","filteredGenre","filter","genre","includes","map","name","FallBackPic","PictureBackdrop","backdrop","nameForClass","media","srcSet","src","alt","Titles","props","titles","length","heading","to","currentPath","backdrop_path","release_date","first_air_date","genre_ids","overview","slice","vote_average","NoMatch","Header","useTimedValue","value","time","useState","timedValue","setTimedValue","useEffect","searchTimer","setTimeout","console","log","clearTimeout","Search","useSelector","useDispatch","split","join","joinedSearchTerm","fetch","onChange","e","inputValue","target","setSearchTerm","placeholder","NavMenu","location","useLocation","pathname","navPath","setNahPath","handleClick","onClick","VideoFrame","videos","site","width","sandbox","key","Title","tagline","status","runtime","number_of_seasons","number_of_episodes","poster_path","SingleTitle","setTitle","navigate","useNavigate","params","useParams","singleTitle","Footer","Error","App","currentSearchResults","basename","path","element","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c6c2d4f.chunk.js","sourcesContent":["import axios from \"axios\"\n\nimport { movieTitles, showTitles, genre, singleMovieTitle, singleShowTitle } from \"../types\"\n\nfunction getTopRatedMovies() {\n    return axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`)\n  }\n\nfunction getTopRatedShows() {\n    return axios.get(`https://api.themoviedb.org/3/tv/top_rated?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`)\n}\n\nfunction getMovieGenres() {\n    return axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n}\n\nfunction getShowGenres() {\n    return axios.get(`https://api.themoviedb.org/3/genre/tv/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n}\n\nexport const getTopRated = async () => {\n\n    const [moviesResponse, showsResponse] = await Promise.all([ getTopRatedMovies(), getTopRatedShows() ])\n\n    const topMovies: [movieTitles] = moviesResponse.data.results.splice(0, 10)\n    const topShows: [showTitles] = showsResponse.data.results.splice(0, 10)\n\n    return {\n        topMovies,\n        topShows\n    }\n}\n\nexport const getGenres = async () => {\n\n    const [movieGenresResult, showGenresResult] = await Promise.all([ getMovieGenres(), getShowGenres()])\n\n    const movieGenres: [genre] = movieGenresResult.data.genres\n    const showGenres: [genre] = showGenresResult.data.genres\n\n    return {\n        movieGenres,\n        showGenres\n    }\n\n}\n\nexport const getTitle = async (id:number|string|undefined, type:string) => {\n\n    const titleResult = await axios.get(`https://api.themoviedb.org/3/${type}/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&append_to_response=videos`)\n    const title: singleMovieTitle | singleShowTitle = titleResult.data\n\n    return title\n\n}\n\nexport const getSearchedTitle = async (type:string, searchTerm: string) => {\n\n    const searchResults = await axios.get(`https://api.themoviedb.org/3/search/${type}?api_key=38ef25d4ae2b140a4f5b6f9c04144a95&query=${searchTerm}`)\n    const searchedTitles: [movieTitles | showTitles] = searchResults.data.results\n\n    return searchedTitles\n\n}","import { getTopRated, getGenres, getSearchedTitle } from \"../../services/moviedb\"\nimport { state, genre, movieTitles, showTitles } from \"../../types\"\n\nconst initialState = {\n  searchTerm: \"\"\n}\n\nconst reducer = ( state: state = initialState, action: { type: string; data: any}) => {\n  switch (action.type) {\n    case \"INITIALIZE_TOP_RATED\": {\n      const topRated = action.data\n\n      return {\n        ...state,\n        topRated\n      }\n    }\n    case \"INITIALIZE_GENRES\": {\n      const genres = action.data\n\n      return {\n        ...state,\n        genres\n      }\n    }\n    case \"INITIALIZE_SEARCH_RESULTS\": {\n      const searchResults = action.data\n\n      return {\n        ...state,\n        searchResults\n      }\n    }\n    case \"CLEAR_SEARCH_RESULTS\": {\n      const clearResults = action.data\n\n      return {\n        ...state,\n        searchResults: clearResults\n      }\n    }\n    case \"SET_SEARCH_TERM\": {\n      const searchTerm = action.data\n\n      return {\n        ...state,\n        searchTerm\n      }\n    }\n    case \"ERROR\": {\n      const errorMessage = action.data\n\n      return {\n        ...state,\n        errorMessage\n      }\n    }\n    default:\n      return state\n  }\n}\n\nconst handleError = (message: string) => {\n   return {\n     type: \"ERROR\",\n     data: message\n   }\n}\n\nexport const initializeTopRated = () => {\n  return async (dispatch: (arg0: { type: string; data: { topMovies: [movieTitles]; topShows: [showTitles] } | string | undefined }) => void) => {\n\n    try {\n      const topRated = await getTopRated()\n\n      dispatch({\n        type: \"INITIALIZE_TOP_RATED\",\n        data: topRated\n      })\n    }\n    catch (err: any) {\n      dispatch(handleError(err.message))\n    }\n\n  }\n}\n\nexport const initializeGenres = () => {\n  return async (dispatch: (arg0: { type: string; data: { movieGenres: [genre]; showGenres: [genre] } | string | undefined }) => void) => {\n\n    try {\n      const genres = await getGenres()\n      dispatch({\n        type: \"INITIALIZE_GENRES\",\n        data: genres\n      })\n    }\n    catch (err: any) {\n      dispatch(handleError(err.message))\n    }\n\n  }\n}\n\nexport const initializeSearchResults = (type:string, searchTerm: string) => {\n  return async (dispatch: (arg0: { type: string; data: [movieTitles | showTitles] | string| undefined }) => void) => {\n\n    try {\n      const searchResults = await getSearchedTitle(type, searchTerm)\n      dispatch({\n        type: \"INITIALIZE_SEARCH_RESULTS\",\n        data: searchResults\n      })\n    }\n    catch (err: any) {\n      dispatch(handleError(err.message))\n    }\n\n  }\n}\n\nexport const clearSearchResults = () => {\n  return async (dispatch: (arg0: { type: string; data: null }) => void) => {\n    const searchResults = null\n    dispatch({\n      type: \"CLEAR_SEARCH_RESULTS\",\n      data: searchResults\n    })\n  }\n}\n\nexport const setSearchTerm = (searchTerm: string) => {\n  return async (dispatch: (arg0: { type: string; data: string }) => void) => {\n    dispatch({\n      type: \"SET_SEARCH_TERM\",\n      data: searchTerm\n    })\n  }\n}\n\nexport const dispatchError = (errorMessage: string) => {\n  return async (dispatch: (arg0: { type: string; data: string }) => void) => {\n    dispatch(handleError(errorMessage))\n  }\n}\n\nexport default reducer","import React from \"react\"\nimport \"./styles/Loader.css\"\n\nconst Loader = () => {\n\n    return (\n        <div className=\"Loader\" >\n            <div className=\"lds-ripple\">\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Loader","import React from \"react\"\nimport { genre } from \"../types\"\n\nconst Genres = ({ titleGenres, genres }: { titleGenres: number[]; genres: genre[] } ) => {\n\n    const filteredGenre = genres.filter( (genre) => titleGenres.includes(genre.id) )\n\n    return (\n        <div className=\"Genres\" >\n            {\n                filteredGenre.map( (genre) => {\n                    return (\n                        <span key={ genre.id } > { genre.name } </span>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default Genres","import React from \"react\"\n\nimport \"./styles/FallBackPic.css\"\n\nconst FallBackPic = () => {\n\n    return (\n        <div className=\"FallBackPic\" >\n        </div>\n    )\n}\n\nexport default FallBackPic","import React from \"react\"\n\nimport FallBackPic from \"./FallBackPic\"\n\nconst PictureBackdrop = ({ backdrop, name, nameForClass }: { backdrop: string, name: string, nameForClass: string }) => {\n\n    return (\n        <div className=\"PictureBackdrop\" >\n            {\n            (backdrop) ?\n            <picture>\n                <source media=\"(min-width:1023px)\" srcSet={`https://image.tmdb.org/t/p/w1280/${ backdrop }`} />\n                <source media=\"(min-width:768px)\" srcSet={`https://image.tmdb.org/t/p/w780/${ backdrop }`} />\n                <img className={ nameForClass } src={`https://image.tmdb.org/t/p/w300/${ backdrop }`} alt={ `${name}` }/>\n            </picture>\n            : <FallBackPic />\n            }\n        </div>\n    )\n}\n\nexport default PictureBackdrop","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport \"./styles/Titles.css\"\nimport Genres from \"./Genres\"\n\nimport { titlesProps } from \"../types\"\nimport PictureBackdrop from \"./PictureBackdrop\"\n\nconst Titles = ( props: titlesProps  ) => {\n\n    if(props.titles.length < 1) {\n        return (\n            <div className=\"no-results\" >\n                No results\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"Titles\" >\n            <h2 className=\"secondary-title font-face-mfstrip\" > { props.heading } </h2>\n            <div className=\"titles-container\" >\n                {\n                    props?.titles?.map( (title) => {\n                        return(\n                            <div className=\"title-container\" key={ title.id }  >\n                                <Link to={`${props.currentPath}/${title.id}`} key={ title.id } >\n                                    <PictureBackdrop nameForClass=\"backdrop-poster\" backdrop={  title.backdrop_path  } name={ ((title as any).name || (title as any).title) }  />\n\n                                    <h3> { (title as any).name || (title as any).title } </h3>\n                                    <p> { (title as any).release_date || (title as any).first_air_date } </p>\n                                    <Genres titleGenres={title.genre_ids} genres={props.genres} />\n                                    <p> { title.overview.slice(0, 100) } . . . </p>\n                                    <span> { title.vote_average } </span>\n                                </Link>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n\n        </div>\n    )\n}\n\nexport default Titles","import React from \"react\"\nimport \"./styles/NoMatch.css\"\n\nconst NoMatch = () => {\n\n    return (\n        <div className=\"NoMatch\" >\n\n            <p> Wrong turn </p>\n            <p> The route doesnt exist </p>\n            <p> Turn back </p>\n\n        </div>\n    )\n}\n\nexport default NoMatch","import React from \"react\"\nimport \"./styles/Header.css\"\n\nconst Header = () => {\n\n    return (\n        <header className=\"Header\" >\n            <picture>\n                <source media=\"(max-width:768px)\" srcSet=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_1-5bdc75aaebeb75dc7ae79426ddd9be3b2be1e342510f8202baf6bffa71d7f5c4.svg\" />\n                <img className=\"logo\" src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\" alt=\"tmdb lgo\" />\n            </picture>\n\n            <h1 className=\"main-title font-face-acfilmstrip\" > Movie and TV Show DB </h1>\n\n            <div className=\"ld-mode\" >\n\n            </div>\n\n        </header>\n    )\n}\n\nexport default Header","import { useState, useEffect } from \"react\"\n\nconst useTimedValue = (value: any, time: number) => {\n    const [ timedValue, setTimedValue ] = useState(value)\n\n    useEffect( () => {\n        const searchTimer = setTimeout( () => {\n            setTimedValue(value)\n            console.log(\"TIMEOUT\", value, timedValue)\n        }, time )\n\n        return () => {\n            clearTimeout(searchTimer)\n          }\n    }, [timedValue, value, time])\n\n    return timedValue\n}\n\nexport default useTimedValue","import React from \"react\"\nimport { useEffect, ChangeEvent } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport \"./styles/Search.css\"\nimport { setSearchTerm } from \"../store/reducers\"\nimport { initializeSearchResults, clearSearchResults } from \"../store/reducers\"\nimport useTimedValue from \"../hooks/useTimedValue\"\n\nimport { state } from \"../types\"\n\nconst Search = ({ type }: { type:string }) => {\n    const searchTerm = useSelector( (state:state) => state.searchTerm)\n    const timedValue = useTimedValue( searchTerm , 1000)\n    const dispatch = useDispatch()\n\n    useEffect( () => {\n\n        if(timedValue.length >= 3) {\n            console.log(\"HIGHER\", timedValue.split(\" \").join(\"+\"))\n            const joinedSearchTerm = timedValue.split(\" \").join(\"+\")\n\n            const fetch = async () => {\n                dispatch(initializeSearchResults(type, joinedSearchTerm))\n              }\n\n            fetch()\n\n        }\n        else {\n            console.log(\"LOWER\", timedValue)\n            dispatch(clearSearchResults())\n        }\n    }, [timedValue, dispatch, type])\n\n    const handleChange = (e: ChangeEvent) => {\n\n        const inputValue: string = (e.target as HTMLInputElement).value\n        dispatch(setSearchTerm(inputValue))\n    }\n\n    return (\n        <div className=\"Search\" >\n\n            <input value={searchTerm} onChange={handleChange} placeholder=\"Search\" />\n\n        </div>\n    )\n}\n\nexport default Search","import React from \"react\"\nimport { Link, useLocation } from \"react-router-dom\"\nimport { useState } from \"react\"\n\nimport \"./styles/NavMenu.css\"\nimport Search from \"./Search\"\n\nconst NavMenu = () => {\n    const location = useLocation()\n    const [navPath, setNahPath] = useState( (location.pathname.slice(1, 6) === \"top-m\" ) ?\n                                                \"movie\" : \"tv\" )\n\n    const handleClick = (value: string) => {\n        setNahPath(value)\n    }\n\n    if(( location.pathname !== \"/top-movies\" && location.pathname !== \"/top-movies/\")\n        && ( location.pathname !== \"/top-shows\" && location.pathname !== \"/top-shows/\" )) {\n        return null\n    }\n\n    return (\n        <div className=\"NavMenu\" >\n\n            <nav className=\"nav\" >\n                <Link to=\"/top-movies\" onClick={ () => handleClick(\"movie\") }  > Movies </Link>\n                <Link to=\"/top-shows\" onClick={ () => handleClick(\"tv\") }  > TV Shows </Link>\n            </nav>\n\n            <Search type={navPath} />\n\n        </div>\n    )\n}\n\nexport default NavMenu","import React from \"react\"\n\nimport { videos } from \"../types\"\n\nconst VideoFrame = ({ videos }: { videos: videos }) => {\n\n    return (\n        <div className=\"VideoFrame\" >\n            {\n                ( videos.results[0].site === \"YouTube\" ) ?\n                <iframe width=\"100%\" sandbox=\"allow-scripts allow-same-origin allow-presentation\" className=\"video\" src={ `https://www.youtube.com/embed/${ videos.results[0].key }` } title={ videos.results[0].name } ></iframe>\n                : <iframe width=\"100%\" className=\"video\" src={ `https://vimeo.com/${ videos.results[0].id }` } title={ videos.results[0].name } ></iframe>\n            }\n        </div>\n    )\n}\n\nexport default VideoFrame","import React from \"react\"\n\nimport \"./styles/Title.css\"\nimport PictureBackdrop from \"./PictureBackdrop\"\nimport VideoFrame from \"./VideoFrame\"\n\nimport { singleMovieTitle, singleShowTitle } from \"../types\"\n\nconst Title = ({ title }: { title: singleMovieTitle | singleShowTitle }) => {\n\n\n    return (\n        <div className=\"Title\" >\n            <div className=\"single-title-container\" key={ title.id } >\n                {\n                    (title.videos.results.length > 0) ?\n                    <VideoFrame videos={ title.videos } />\n                    : <PictureBackdrop nameForClass=\"single-backdrop-poster\" backdrop={ title.backdrop_path }  name={ (title as any).name || ((title as any).title) } />\n                }\n                <h3 className=\"title-heading font-face-undeveloped\" > { (title as any).name || (title as any).title } </h3>\n\n                <div className=\"details-container\" >\n                    <div className=\"details\" >\n                        <p id=\"tagline\" > { title.tagline } </p>\n                        <div>\n                            <p> <span className=\"desc-t\" > Status</span>: { title.status } </p>\n                        </div>\n                        <div>\n                            {\n                                ((title as any).runtime) ?\n                                (\n                                    <p> <span className=\"desc-t\" >Runtime</span>: { (title as any).runtime } </p>\n                                ) : null\n                            }\n                            {\n                                ((title as any).number_of_seasons) ?\n                                (\n                                    <p> <span className=\"desc-t\" >Season/Episodes</span>: { (title as any).number_of_seasons }/{ (title as any).number_of_episodes } </p>\n                                ) : null\n                            }\n                        </div>\n                        <div>\n                            <span className=\"desc-t\" > Year </span>\n                            <p> { (title as any).release_date || (title as any).first_air_date } </p>\n                        </div>\n                        <div>\n                            <span className=\"desc-t\" > Overview </span>\n                            <p> { title.overview } </p>\n                        </div>\n                        <div>\n                            <span> Vote average: { title.vote_average } </span>\n                        </div>\n                    </div>\n                    {\n                        (title.poster_path) ?\n                        <PictureBackdrop nameForClass=\"single-poster\" backdrop={  title.poster_path }  name={ (title as any).name || ((title as any).title) } />\n                        : null\n                    }\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Title","import React from \"react\"\nimport { useState, useEffect } from \"react\"\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { useDispatch } from \"react-redux\"\n\nimport \"./styles/SingleTitle.css\"\nimport { getTitle } from \"../services/moviedb\"\nimport { dispatchError } from \"../store/reducers\"\nimport Loader from \"./Loader\"\nimport Title from \"./Title\"\n\nimport { singleMovieTitle, singleShowTitle } from \"../types\"\n\nconst SingleTitle = ({ type }: { type:string }) => {\n    const [ title, setTitle ] = useState<singleMovieTitle | singleShowTitle | null | undefined>(null)\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const params = useParams()\n\n    useEffect( () => {\n\n        async function fetch() {\n\n            const id:string|undefined = params.id\n\n            try {\n                const singleTitle = await getTitle(id, type)\n\n                setTitle(singleTitle)\n            }\n            catch (err: any) {\n                dispatch(dispatchError(err.message))\n            }\n\n          }\n\n        fetch()\n\n    }, [params.id, type, dispatch])\n\n    if(!title) {\n        return (\n            <Loader />\n        )\n    }\n    console.log(\"SINGLE TITLE\", title)\n    console.log(\"SINGLE TITLE VIDEOS\", title.videos.results)\n    return (\n        <div className=\"SingleTitle\" >\n            <button id=\"back-btn\" onClick={ () => navigate(-1) } > Back </button>\n            <Title title={ title } />\n        </div>\n    )\n}\n\nexport default SingleTitle","import React from \"react\"\nimport \"./styles/Footer.css\"\n\nconst Footer = () => {\n\n    return (\n        <footer className=\"Footer\" >\n            <picture>\n                <source media=\"(min-width:768px)\" srcSet=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_long_1-8ba2ac31f354005783fab473602c34c3f4fd207150182061e425d366e4f34596.svg\" />\n                <img className=\"logo-footer\" src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg\" alt=\"tmdb logo\" />\n            </picture>\n        </footer>\n    )\n}\n\nexport default Footer","import React from \"react\"\nimport \"./styles/Error.css\"\n\nconst Error = ({ message }: { message: string | undefined }) => {\n    console.log(\"MESSAGE\", message)\n    return (\n        <div className=\"Error\" >\n\n            <p> Error </p>\n            <p>  { message } </p>\n\n        </div>\n    )\n}\n\nexport default Error","import React from \"react\"\nimport \"./App.css\"\nimport { useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { initializeTopRated, initializeGenres } from \"./store/reducers\"\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate\n} from \"react-router-dom\"\n\nimport Loader from \"./components/Loader\"\nimport Titles from \"./components/Titles\"\nimport NoMatch from \"./components/NoMatch\"\nimport Header from \"./components/Header\"\nimport NavMenu from \"./components/NavMenu\"\nimport SingleTitle from \"./components/SingleTitle\"\nimport Footer from \"./components/Footer\"\nimport Error from \"./components/Error\"\n\nimport { state } from \"./types\"\n\n\nfunction App() {\n  const topRated = useSelector( (state:state) => state.topRated)\n  const genres = useSelector( (state:state) => state.genres)\n  const currentSearchResults: any = useSelector( (state:state) => state.searchResults)\n  const errorMessage = useSelector( (state:state) => state.errorMessage)\n  const dispatch = useDispatch()\nconsole.log(\"SEARCH R\", currentSearchResults)\n  useEffect( () => {\n    dispatch(initializeTopRated())\n    dispatch(initializeGenres())\n  }, [dispatch])\n\n  if(errorMessage) {\n    return (\n      <Error message={errorMessage} />\n    )\n  }\n\n  console.log( \"TR\", topRated)\n  console.log( \"G\", genres)\n\n  if(!topRated || !genres) {\n    return (\n      <Loader />\n    )\n  }\n\n  return (\n    <div className=\"App\">\n\n      <Header />\n      <main>\n        <Router basename=\"/movie-db\" >\n\n          <NavMenu />\n\n          <Routes>\n            <Route  path=\"/\" element={ <Navigate to=\"/top-shows\" /> } />\n            <Route  path=\"/top-shows\" element={ <Titles titles={(currentSearchResults)? currentSearchResults : topRated.topShows } genres={genres.movieGenres} heading=\"TV Shows\" currentPath=\"/top-shows\" /> } />\n            <Route  path=\"/top-movies\" element={ <Titles titles={(currentSearchResults)? currentSearchResults : topRated.topMovies} genres={genres.showGenres} heading=\"Movies\" currentPath=\"/top-movies\" /> } />\n            <Route  path=\"/top-shows/:id\" element={ <SingleTitle  type={\"tv\"} /> } />\n            <Route  path=\"/top-movies/:id\" element={ <SingleTitle type={\"movie\"} /> } />\n\n            <Route path=\"*\" element={ <NoMatch /> } />\n          </Routes>\n        </Router>\n      </main>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import { createStore, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\n\nimport reducer from \"./reducers\"\n\nexport const store = createStore(reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    ))\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport { Provider } from \"react-redux\"\nimport { store } from \"./store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n)"],"sourceRoot":""}